<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
namespace: SQL문을 분류하는 용도로 사용하는 그룹명.
           프로그래밍의 일관성을 위해서 가능한 DAO의 패키지명과 같게 하라!
 -->
<mapper namespace="java76.pms.dao.ContentsDao">

  <resultMap type="contents" id="contentsMap">
  </resultMap>

  <select id="selectList" resultMap="contentsMap" parameterType="map">
    select 
    	cno,
			contents_uno,
			title,
			content,
			video,
			views,     
			cre_dt,
			read_count,
			likes
    from contents
    order by
    <choose>
    		<when test="keyword == 'title'">title </when>
    		<when test="keyword == 'views'">views</when>
    		<otherwise>cre_dt </otherwise>
    	</choose>
    	<choose>
    		<when test="align == 'asc'">asc </when>
    		<otherwise>desc </otherwise>
    	</choose>
   limit #{startIndex}, #{length}
  </select>
  
  <select id="paging" resultMap="contentMap" parameterType="map">
    select 
      cno,
      video
    from content
  </select>
  
  <insert id="insert" parameterType="contents">
    insert into contents(contents_uno,title,content,cre_dt,video) 
    values(#{contents_uno},#{title},#{content},now(),#{video})
  </insert>
  
  <delete id="delete" parameterType="map">
    delete from contents 
    where cno=#{cno}
  </delete>
  
  
  <update id="update" parameterType="contents">
    update contents set 
      title=#{title},
      content=#{content},
      video=#{video}
    where cno=#{cno}
  </update>
  
  <select id="selectOne" resultMap="contentsMap" parameterType="int">
    select
    	cno,
      title,
      content,
      cre_dt
    from contents
    where cno=#{cno}
  </select>
</mapper>